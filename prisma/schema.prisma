// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String               @id @default(cuid())
  name              String?
  email             String               @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  accounts          Account[]
  sessions          Session[]
  quranSettings     QuranReviewSettings?
  spacedRepetition  SpacedRepetitionData[]
  dailyLogs         DailyLog[]
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model QuranReviewSettings {
  id                String   @id @default(cuid())
  userId            String   @unique
  selectedJuzaa     Int[]
  selectedSurahs    Int[]
  selectionType     String   @default("juzaa") // "juzaa" or "surah"
  ayahsAfter        Int      @default(2)
  promptsPerSession Int      @default(20)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SpacedRepetitionData {
  id             String   @id @default(cuid())
  userId         String
  surahNo        Int
  ayahNoSurah    Int
  interval       Float    @default(1)
  repetitions    Int      @default(0)
  easeFactor     Float    @default(2.5)
  lastReviewed   DateTime @default(now())
  dueDate        DateTime @default(now())
  reviewDate     String?  // YYYY-MM-DD format
  selectionType  String   @default("juzaa") // "juzaa" or "surah"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, surahNo, ayahNoSurah])
  @@index([userId, dueDate])
}

model DailyLog {
  id          String   @id @default(cuid())
  userId      String
  date        String   // YYYY-MM-DD format
  ayahKey     String   // Format: surahNo_ayahNoSurah
  count       Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date, ayahKey])
  @@index([userId, date])
} 